#!/usr/bin/env bash
# I organize my projects in ~/Developer/org/name, and I'd like to create sessions for each of them.
# This script uses a combination of find, zoxide (so they are sort by frecency) and fzf to list and filter project folders.
# Then, it either switch to an existing tmux session for that project, or create a new one and switch to it.
#
# Stole and modified from: https://github.com/ThePrimeagen/.dotfiles/blob/master/bin/.local/bin/tmux-sessionizer

# Set the fzf catppuccin theme, as it won't grab it from fish's set -Ux for
# some reaason.
export FZF_DEFAULT_OPTS=" \
	--color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
	--color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
	--color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8"

search() {
	find "$PROJECTS" -maxdepth 2 -type d |
		while read -r p; do
			zoxide query -l -s "$p"
		done |
		sed "s;$PROJECTS/;;" |	# removes the ~/Developer/ prefix
		grep -v "$PROJECTS" |	# removes the ~/Developer folder itself
		grep "/" |				# removes entries without subfolders
		sort -rnk1 |
		uniq |
		awk '{print $2}' |		# do not actually print the score
		fzf --no-sort --prompt "ï¬¿ "
}

if [[ $# -eq 1 ]]; then
    selected=$1
else
	selected=$(search)
fi

if [[ -z $selected ]]; then
    exit 0
fi

selected_name="$(basename "$selected" | tr . _)"
tmux_running="$(pgrep tmux)"

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    tmux new-session -s "$selected_name" -c "$PROJECTS/$selected"
    exit 0
fi

if ! tmux has-session -t="$selected_name" 2> /dev/null; then
    tmux new-session -ds "$selected_name" -c "$PROJECTS/$selected"
fi

tmux switch-client -t "$selected_name"
